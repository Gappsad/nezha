// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/server": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server"
                ],
                "summary": "编辑服务器",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Token",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "服务器信息",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/singleton.ServerConfigData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/singleton.ServerConfigResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server"
                ],
                "summary": "添加新服务器",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Token",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "服务器信息",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/singleton.ServerConfigData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/singleton.ServerConfigResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server"
                ],
                "summary": "删除服务器",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Token",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "服务器ID列表",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/singleton.ServerDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/singleton.ServerDeleteResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/server/details": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server"
                ],
                "summary": "获取服务器信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Token",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "服务器ID，逗号分隔，优先级高于tag查询",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "服务器分组",
                        "name": "tag",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/singleton.ServerStatusResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/server/groups": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server"
                ],
                "summary": "批量更新服务器分组",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Token",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "更新信息",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/singleton.BatchUpdateServerGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/singleton.BatchUpdateServerGroupResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/server/list": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server"
                ],
                "summary": "获取服务器列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Token",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "服务器分组",
                        "name": "tag",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/singleton.ServerInfoResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/server/upgrade": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server"
                ],
                "summary": "强制更新agent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Token",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "需要强制更新的服务器列表",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/singleton.ForceUpdateAgentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/singleton.ForceUpdateAgentResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Host": {
            "type": "object",
            "properties": {
                "arch": {
                    "type": "string"
                },
                "bootTime": {
                    "type": "integer"
                },
                "countryCode": {
                    "type": "string"
                },
                "cpu": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "diskTotal": {
                    "type": "integer"
                },
                "gpu": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "memTotal": {
                    "type": "integer"
                },
                "platform": {
                    "type": "string"
                },
                "platformVersion": {
                    "type": "string"
                },
                "swapTotal": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                },
                "virtualization": {
                    "type": "string"
                }
            }
        },
        "model.HostState": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "number"
                },
                "diskUsed": {
                    "type": "integer"
                },
                "gpu": {
                    "type": "number"
                },
                "load1": {
                    "type": "number"
                },
                "load15": {
                    "type": "number"
                },
                "load5": {
                    "type": "number"
                },
                "memUsed": {
                    "type": "integer"
                },
                "netInSpeed": {
                    "type": "integer"
                },
                "netInTransfer": {
                    "type": "integer"
                },
                "netOutSpeed": {
                    "type": "integer"
                },
                "netOutTransfer": {
                    "type": "integer"
                },
                "processCount": {
                    "type": "integer"
                },
                "swapUsed": {
                    "type": "integer"
                },
                "tcpConnCount": {
                    "type": "integer"
                },
                "temperatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SensorTemperature"
                    }
                },
                "udpConnCount": {
                    "type": "integer"
                },
                "uptime": {
                    "type": "integer"
                }
            }
        },
        "model.SensorTemperature": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "temperature": {
                    "type": "number"
                }
            }
        },
        "singleton.BatchUpdateServerGroupRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "description": "新的分组",
                    "type": "string",
                    "example": "newGroup"
                },
                "servers": {
                    "description": "需要更新的服务器ID",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2
                    ]
                }
            }
        },
        "singleton.BatchUpdateServerGroupResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "message": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "singleton.CommonServerInfo": {
            "type": "object",
            "properties": {
                "agent_version": {
                    "type": "string"
                },
                "display_index": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "ipv4": {
                    "type": "string"
                },
                "ipv6": {
                    "type": "string"
                },
                "last_active": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "valid_ip": {
                    "type": "string"
                }
            }
        },
        "singleton.ForceUpdateAgentRequest": {
            "type": "object",
            "properties": {
                "server_id_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2
                    ]
                }
            }
        },
        "singleton.ForceUpdateAgentResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "fail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "3": "\"offline\""
                    }
                },
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "success": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2
                    ]
                }
            }
        },
        "singleton.ServerConfigData": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "DDNSDomain": {
                    "type": "string",
                    "example": ""
                },
                "DDNSProfile": {
                    "type": "string",
                    "example": ""
                },
                "displayIndex": {
                    "description": "展示排序，越大越靠前",
                    "type": "integer",
                    "example": 0
                },
                "enableDDNS": {
                    "type": "string",
                    "example": "off"
                },
                "enableIPv4": {
                    "type": "string",
                    "example": "off"
                },
                "enableIpv6": {
                    "type": "string",
                    "example": "off"
                },
                "hideForGuest": {
                    "description": "对游客隐藏",
                    "type": "string",
                    "example": "off"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "name": {
                    "description": "服务器名称",
                    "type": "string",
                    "example": "服务器名"
                },
                "note": {
                    "description": "管理员可见备注",
                    "type": "string",
                    "example": "备注"
                },
                "secret": {
                    "description": "服务器密钥, 默认18位随机字符串",
                    "type": "string",
                    "example": ""
                },
                "tag": {
                    "description": "服务器分组",
                    "type": "string",
                    "example": "服务器组"
                }
            }
        },
        "singleton.ServerConfigResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "result": {
                    "$ref": "#/definitions/singleton.ServerConfigData"
                }
            }
        },
        "singleton.ServerDeleteRequest": {
            "type": "object",
            "properties": {
                "id_list": {
                    "description": "需要删除的服务器ID",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2
                    ]
                }
            }
        },
        "singleton.ServerDeleteResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "message": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "singleton.ServerInfoResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/singleton.CommonServerInfo"
                    }
                }
            }
        },
        "singleton.ServerStatusResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/singleton.StatusResponse"
                    }
                }
            }
        },
        "singleton.StatusResponse": {
            "type": "object",
            "properties": {
                "agent_version": {
                    "type": "string"
                },
                "display_index": {
                    "type": "integer"
                },
                "host": {
                    "$ref": "#/definitions/model.Host"
                },
                "id": {
                    "type": "integer"
                },
                "ipv4": {
                    "type": "string"
                },
                "ipv6": {
                    "type": "string"
                },
                "last_active": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.HostState"
                },
                "tag": {
                    "type": "string"
                },
                "valid_ip": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
